{"version":3,"sources":["webpack:///./src/pages/home/_trade.js"],"names":["platforms","Object","freeze","trader","bot","mt5","ImageWrapper","styled","div","props","is_selected","ImageContainer","StyledSection","SectionContainer","Trade","is_ppc_redirect","React","useState","selected","setSelected","data","useStaticQuery","direction","as","type","align","localize","weight","m","width","style","maxWidth","marginRight","alt","row_gap","height","onMouseEnter","onMouseLeave"],"mappings":"+FAAA,wGAqCMA,EAAYC,OAAOC,OAAO,CAC5BC,OAAQ,UACRC,IAAK,OACLC,IAAK,SAGHC,EAAeC,IAAOC,IAAV,2EAAGD,CAAH,iIAIA,SAACE,GAAD,OAAYA,EAAMC,YAAc,UAAY,YAC/C,SAACD,GAAD,OAAYA,EAAMC,YAAc,IAAM,OACtC,SAACD,GAAD,OAAYA,EAAMC,YAAc,IAAM,QAK/CC,EAAiBJ,IAAOC,IAAV,6EAAGD,CAAH,+CAKdK,EAAgBL,YAAOM,KAAV,4EAAGN,CAAH,2FAiFJO,UA7ED,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EAEHC,IAAMC,SAAS,MAAxCC,EAF4B,KAElBC,EAFkB,KAG7BC,EAAOC,yBAzDN,cA0DP,OACI,kBAACT,EAAD,KACI,kBAAC,IAAD,CAAWU,UAAU,UACjB,kBAAC,IAAD,CAAQC,GAAG,KAAKC,KAAK,gBAAgBC,MAAM,UACtCC,YAAS,2BAEd,kBAAC,IAAD,CACIC,OAAO,SACPJ,GAAG,KACHC,KAAK,oBACLC,MAAM,SACNG,EAAE,iBAEDF,YAAS,qEAEd,kBAAC,IAAD,CAAMG,MAAM,OAAOP,UAAU,cACzB,yBAAKQ,MAAO,CAAED,MAAO,OAAQE,SAAU,UAAWC,YAAa,SAC3D,kBAACrB,EAAD,KACI,kBAACL,EAAD,CAAcI,aAAcQ,GAAYA,IAAalB,EAAUG,QAC3D,kBAAC,IAAD,CACIiB,KAAMA,EAAI,cACVa,IAAKP,YAAS,WACdG,MAAM,UAGd,kBAACvB,EAAD,CAAcI,YAAaQ,IAAalB,EAAUI,KAC9C,kBAAC,IAAD,CACIgB,KAAMA,EAAI,WACVa,IAAKP,YAAS,QACdG,MAAM,UAGd,kBAACvB,EAAD,CAAcI,YAAaQ,IAAalB,EAAUK,KAC9C,kBAAC,IAAD,CACIe,KAAMA,EAAI,WACVa,IAAKP,YAAS,QACdG,MAAM,YAKtB,yBAAKC,MAAO,CAAED,MAAO,OAAQE,SAAU,YACnC,kBAAC,IAAD,CAASG,QAAQ,SAASC,OAAO,MAC7B,yBACIC,aAAc,kBAAMjB,EAAYnB,EAAUG,SAC1CkC,aAAc,kBAAMlB,EAAY,MAEhC,kBAAC,aAAD,OAEJ,yBACIiB,aAAc,kBAAMjB,EAAYnB,EAAUI,MAC1CiC,aAAc,kBAAMlB,EAAY,MAEhC,kBAAC,UAAD,OAEJ,yBACIiB,aAAc,kBAAMjB,EAAYnB,EAAUK,MAC1CgC,aAAc,kBAAMlB,EAAY,MAEhC,kBAAC,WAAD,CAAUJ,gBAAiBA","file":"125-745e11e882d97bb57537.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { TraderCard, BotCard, DMT5Card } from 'components/custom/other-platforms.js'\nimport { localize } from 'components/localization'\nimport { SectionContainer, Container, Flex, CssGrid } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\n\nconst query = graphql`\n    query {\n        dtrader_trade: file(relativePath: { eq: \"dtrader_trade_home.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 794) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                    originalName\n                }\n            }\n        }\n        dmt5_trade: file(relativePath: { eq: \"dmt5_trade_home.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 794) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                    originalName\n                }\n            }\n        }\n        dbot_trade: file(relativePath: { eq: \"dbot_trade_home.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 794) {\n                    ...GatsbyImageSharpFluid_withWebp_noBase64\n                    originalName\n                }\n            }\n        }\n    }\n`\nconst platforms = Object.freeze({\n    trader: 'dtrader',\n    bot: 'dbot',\n    mt5: 'dmt5',\n})\n\nconst ImageWrapper = styled.div`\n    height: 100%;\n    width: 100%;\n    max-width: 65.7rem;\n    visibility: ${(props) => (props.is_selected ? 'initial' : 'hidden')};\n    opacity: ${(props) => (props.is_selected ? '1' : '0')};\n    z-index: ${(props) => (props.is_selected ? '0' : '10')};\n    position: absolute;\n    transition: opacity 0.25s;\n`\n\nconst ImageContainer = styled.div`\n    position: relative;\n    height: 100%;\n    width: 100%;\n`\nconst StyledSection = styled(SectionContainer)`\n    background-image: linear-gradient(to bottom, var(--color-grey-11), rgba(238, 238, 238, 0));\n`\n\nconst Trade = ({ is_ppc_redirect }) => {\n    // one option always has to be selected\n    const [selected, setSelected] = React.useState(null)\n    const data = useStaticQuery(query)\n    return (\n        <StyledSection>\n            <Container direction=\"column\">\n                <Header as=\"h3\" type=\"section-title\" align=\"center\">\n                    {localize('Trade the way you like')}\n                </Header>\n                <Header\n                    weight=\"normal\"\n                    as=\"h4\"\n                    type=\"sub-section-title\"\n                    align=\"center\"\n                    m=\"1.6rem 0 6rem\"\n                >\n                    {localize('Choose from three powerful platforms â€” designed with you in mind')}\n                </Header>\n                <Flex width=\"100%\" direction=\"flex-start\">\n                    <div style={{ width: '100%', maxWidth: '65.7rem', marginRight: '6rem' }}>\n                        <ImageContainer>\n                            <ImageWrapper is_selected={!selected || selected === platforms.trader}>\n                                <QueryImage\n                                    data={data['dtrader_trade']}\n                                    alt={localize('DTrader')}\n                                    width=\"100%\"\n                                />\n                            </ImageWrapper>\n                            <ImageWrapper is_selected={selected === platforms.bot}>\n                                <QueryImage\n                                    data={data['dbot_trade']}\n                                    alt={localize('DBot')}\n                                    width=\"100%\"\n                                />\n                            </ImageWrapper>\n                            <ImageWrapper is_selected={selected === platforms.mt5}>\n                                <QueryImage\n                                    data={data['dmt5_trade']}\n                                    alt={localize('DMT5')}\n                                    width=\"100%\"\n                                />\n                            </ImageWrapper>\n                        </ImageContainer>\n                    </div>\n                    <div style={{ width: '100%', maxWidth: '38.4rem' }}>\n                        <CssGrid row_gap=\"1.6rem\" height=\"0%\">\n                            <div\n                                onMouseEnter={() => setSelected(platforms.trader)}\n                                onMouseLeave={() => setSelected('')}\n                            >\n                                <TraderCard />\n                            </div>\n                            <div\n                                onMouseEnter={() => setSelected(platforms.bot)}\n                                onMouseLeave={() => setSelected('')}\n                            >\n                                <BotCard />\n                            </div>\n                            <div\n                                onMouseEnter={() => setSelected(platforms.mt5)}\n                                onMouseLeave={() => setSelected('')}\n                            >\n                                <DMT5Card is_ppc_redirect={is_ppc_redirect} />\n                            </div>\n                        </CssGrid>\n                    </div>\n                </Flex>\n            </Container>\n        </StyledSection>\n    )\n}\n\nTrade.propTypes = {\n    is_ppc_redirect: PropTypes.bool,\n}\n\nexport default Trade\n"],"sourceRoot":""}